{
    "name": "Xilinx DSPLIB VSS FFT IFFT 1CH",
    "description": "",
    "gui": false,
    "flow": "system",
    "platform_allowlist": [
        "vck190",
        "vek280"
    ],
    "platform_properties": {
        "vck190": {
            "param_set": ["*aie1*"],
            "v++": {
                "compiler": {
                    "clflags": []
                },
                "linker": {
                    "ldclflags": [
                        "--config PROJECT/system.cfg"
                    ]
                },
                "package": {
                    "clflags": [
                        "--package.defer_aie_run"
                    ]
                }
            }
        },
        "vek280": {
                "param_set": ["*aie2*"],
                "v++": {
                "compiler": {
                    "clflags": []
                },
                "linker": {
                    "ldclflags": [
                        "--config PROJECT/system.cfg"
                    ]
                },
                "package": {
                    "clflags": [
                        "--package.defer_aie_run"
                    ]
                }
            }
        }       
    },
    "data": {
        "file" : [
            "PROJECT/data/input_front.txt",
            "PROJECT/data/ref_output.txt"
        ]
    },
    "aiecontainers": [
        {
            "embed_make_post": ["include ./aie_libadf.mk"]
        }
    ],
    "containers": [
        {
            "accelerators": [
                {
                    "location": "LIB_DIR/L1/tests/hw/mm2s/mm2s.cpp",
                    "clflags": "-DNSTREAM=$(shell $(VITIS_PYTHON3) paramset.py $(PARAMS_FILE) $(PARAMS) \"SSR\") -DPOINT_SIZE=$(shell $(VITIS_PYTHON3) paramset.py $(PARAMS_FILE) $(PARAMS) \"POINT_SIZE\") -DNITER=$(shell $(VITIS_PYTHON3) paramset.py $(PARAMS_FILE) $(PARAMS) \"NITER\")",
                    "name": "mm2s_wrapper"
                },
                {
                    "location": "LIB_DIR/L1/tests/hw/s2mm/s2mm.cpp",
                    "clflags": "-DNSTREAM=$(shell $(VITIS_PYTHON3) paramset.py $(PARAMS_FILE) $(PARAMS) \"SSR\") -DPOINT_SIZE=$(shell $(VITIS_PYTHON3) paramset.py $(PARAMS_FILE) $(PARAMS) \"POINT_SIZE\") -DNITER=$(shell $(VITIS_PYTHON3) paramset.py $(PARAMS_FILE) $(PARAMS) \"NITER\")",
                    "name": "s2mm_wrapper"
                }
            ],
            "associated_files":["vss_fft_ifft_1d/vss_fft_ifft_1d.vss"],
            "name": "kernel"
        }
    ],
    "host": {
        "host_exe": "host.elf",
        "compiler": {
            "sources": [
                "PROJECT/host.cpp"
            ],
            "includepaths": [
                "$(SYSROOT)/usr/include/xrt/",
                "LIB_DIR/L2/include/aie",
                "LIB_DIR/L2/tests/aie/common/inc",
                "LIB_DIR/L1/include/aie",
                "LIB_DIR/L1/src/aie",
                "LIB_DIR/L1/tests/aie/inc",
                "LIB_DIR/L1/tests/aie/src",
                "PROJECT"
            ],
            "options": "--sysroot=$(SYSROOT) -DPOINT_SIZE=$(shell $(VITIS_PYTHON3) paramset.py $(PARAMS_FILE) $(PARAMS) \"POINT_SIZE\")  -DNITER=$(shell $(VITIS_PYTHON3) paramset.py $(PARAMS_FILE) $(PARAMS) \"NITER\")   -DSSR=$(shell $(VITIS_PYTHON3) paramset.py $(PARAMS_FILE) $(PARAMS) \"SSR\") -DTT_DATA=$(shell $(VITIS_PYTHON3) paramset.py $(PARAMS_FILE) $(PARAMS) \"DATA_TYPE\")",
            "symbols": [
                "__PS_ENABLE_AIE__",
                "USING_UUT=1"
            ]
        },
        "linker": {
            "librarypaths": [
                "$(SYSROOT)/usr/lib/"
            ],
            "options": "--sysroot=$(SYSROOT)"
        }
    },
    "pre_build": [
        {
            "build_cmd": "$(if $(filter-out REF,$(TAG)), $(VITIS_PYTHON3) LIB_DIR/L2/tests/vss/scripts/gen_vss_configs.py LIB_DIR $(CUR_DIR) $(PARAMS) vss_fft_ifft_1d_params.cfg fft_aie)"
        },
        {
            "build_cmd": "$(if $(filter-out REF,$(TAG)), $(VITIS_PYTHON3) LIB_DIR/L2/tests/aie/common/scripts/paramenv.py --parameter_file $(PARAMS_FILE) --instance_name $(PARAMS) --command \"make -f PROJECT/helper.mk HELPER_CUR_DIR=PROJECT HELPER_ROOT_DIR=LIB_DIR UUT_KERNEL=$(UUT_KERNEL) TAG=$(TAG) FRONT_INPUT_FILE=$(FRONT_INPUT_FILE) BACK_INPUT_FILE=$(BACK_INPUT_FILE) REF_INPUT_FILE=$(REF_INPUT_FILE) REF_SIM_FILE=$(REF_SIM_FILE)\")"
        },
        {
            "build_cmd": "$(if $(filter hw_emu,$(TARGET)), make -f LIB_DIR/L2/include/vss/vss_fft_ifft_1d/vss_fft_ifft_1d.mk vss HELPER_CUR_DIR=$(CUR_DIR) HELPER_ROOT_DIR=LIB_DIR AIETARGET=hw)"
        },
        {
            "build_cmd": "$(if $(filter hw,$(TARGET)), make -f LIB_DIR/L2/include/vss/vss_fft_ifft_1d/vss_fft_ifft_1d.mk vss HELPER_CUR_DIR=$(CUR_DIR) HELPER_ROOT_DIR=LIB_DIR AIETARGET=hw)"
        },
        {
            "build_cmd": "$(if $(filter hw_emu,$(TARGET)), $(VITIS_PYTHON3) LIB_DIR/L2/tests/aie/common/scripts/paramenv.py --parameter_file $(PARAMS_FILE) --instance_name $(PARAMS) --command \"make -f PROJECT/helper.mk gen_conn_cfg HELPER_CUR_DIR=PROJECT HELPER_ROOT_DIR=LIB_DIR\")"
        },
        {
            "build_cmd": "$(if $(filter hw,$(TARGET)), $(VITIS_PYTHON3) LIB_DIR/L2/tests/aie/common/scripts/paramenv.py --parameter_file $(PARAMS_FILE) --instance_name $(PARAMS) --command \"make -f PROJECT/helper.mk gen_conn_cfg HELPER_CUR_DIR=PROJECT HELPER_ROOT_DIR=LIB_DIR\")"
        }      
    ],
    "post_launch": [
        {
            "target": "aiesim",
            "launch_cmd": [
                "mkdir -p logs",
                "$(VITIS_PYTHON3) LIB_DIR/L2/tests/aie/common/scripts/paramenv.py --parameter_file $(PARAMS_FILE) --instance_name $(PARAMS) --command \"make -f PROJECT/helper.mk get_status HELPER_CUR_DIR=PROJECT HELPER_ROOT_DIR=LIB_DIR UUT_SIM_FILE=$(UUT_SIM_FILE) REF_SIM_FILE=$(REF_SIM_FILE) UUT_KERNEL=$(UUT_KERNEL)\"",
                "$(VITIS_PYTHON3) LIB_DIR/L2/tests/aie/common/scripts/paramenv.py --parameter_file $(PARAMS_FILE) --instance_name $(PARAMS) --command \"make -f PROJECT/helper.mk get_latency HELPER_CUR_DIR=PROJECT HELPER_ROOT_DIR=LIB_DIR UUT_KERNEL=$(UUT_KERNEL)\"",
                "$(VITIS_PYTHON3) LIB_DIR/L2/tests/aie/common/scripts/paramenv.py --parameter_file $(PARAMS_FILE) --instance_name $(PARAMS) --command \"make -f PROJECT/helper.mk get_stats HELPER_CUR_DIR=PROJECT HELPER_ROOT_DIR=LIB_DIR UUT_KERNEL=$(UUT_KERNEL) \"",
                "$(VITIS_PYTHON3) LIB_DIR/L2/tests/aie/common/scripts/paramenv.py --parameter_file $(PARAMS_FILE) --instance_name $(PARAMS) --command \"make -f PROJECT/helper.mk get_theoretical_min HELPER_CUR_DIR=PROJECT HELPER_ROOT_DIR=LIB_DIR UUT_KERNEL=$(UUT_KERNEL)\"",
                "$(VITIS_PYTHON3) LIB_DIR/L2/tests/aie/common/scripts/paramenv.py --parameter_file $(PARAMS_FILE) --instance_name $(PARAMS) --command \"make -f PROJECT/helper.mk harvest_mem HELPER_CUR_DIR=PROJECT HELPER_ROOT_DIR=LIB_DIR UUT_KERNEL=$(UUT_KERNEL)\"",
                "tclsh LIB_DIR/L2/tests/aie/common/scripts/diff_exit.tcl ./"
            ]
        },
        {
            "target": "x86sim",
            "launch_cmd": [
                "mkdir -p logs",
                "$(if $(filter-out REF,$(TAG)), $(VITIS_PYTHON3) LIB_DIR/L2/tests/aie/common/scripts/paramenv.py --parameter_file $(PARAMS_FILE) --instance_name $(PARAMS) --command \"make -f PROJECT/helper.mk get_status HELPER_CUR_DIR=PROJECT HELPER_ROOT_DIR=LIB_DIR UUT_SIM_FILE=$(UUT_SIM_FILE) REF_SIM_FILE=$(REF_SIM_FILE) UUT_KERNEL=$(UUT_KERNEL)\")",
                "$(if $(filter-out REF,$(TAG)), tclsh LIB_DIR/L2/tests/aie/common/scripts/diff_exit.tcl ./)"
            ]
        }
    ],
    "launch": [
        {
            "name": "hwemu-launch",
            "target": "hw_emu"
        }
    ],
    "aiecompiler": {
        "compiler": {
            "includepaths": [
                "LIB_DIR/L1/include/aie",
                "LIB_DIR/L1/src/aie",
                "LIB_DIR/L1/tests/aie/inc",
                "LIB_DIR/L1/tests/aie/src",
                "LIB_DIR/L2/include/aie",
                "LIB_DIR/L2/tests/aie/common/inc",
                "./"
            ],
            "customized_params": {
                "params": "--aie.verbose  $($(TAG)_TARGET_COMPILE_ARGS)  $($(TAG)_PREPROC_ARGS)",
                "default": {
                    "TAG": "UUT",
                    "UUT_KERNEL": "fft_ifft_dit_1ch",
                    "REF_KERNEL": "fft_ifft_dit_1ch_ref",
                    "UUT_GRAPH": "vss_fft_ifft_1d_graph",
                    "REF_GRAPH": "fft_ifft_dit_1ch_ref_graph",
                    "STACKSIZE_VAL": "16384",
                    "UUT_SIM_FILE": "./data/uut_output.txt",
                    "REF_SIM_FILE": "./data/ref_output.txt",
                    "FRONT_INPUT_FILE": "./data/input_front.txt",
                    "BACK_INPUT_FILE": "./data/input_back.txt",
                    "FRONT_OUTPUT_FILE": "./data/output_front.txt",
                    "BACK_OUTPUT_FILE": "./data/output_back.txt",
                    "INPUT_FILE": "./data/input.txt",
                    "REF_INPUT_FILE": "./data/input_ref.txt",
                    "UUT_TARGET_COMPILE_ARGS": "--aie.Xchess=llvm.xargs=\"-std=c++2a\" --aie.Xchess=main:backend.mist2.xargs=\"+NOdra\" --aie.Xchess=main:backend.mist2.pnll=\"off\" --aie.stacksize=$(STACKSIZE_VAL)",
                    "REF_TARGET_COMPILE_ARGS": "",
                    "REF_PREPROC_ARGS": "--aie.Xpreproc=-DUUT_GRAPH=$(REF_GRAPH) --aie.Xpreproc=-DOUTPUT_FILE=$(REF_SIM_FILE) --aie.Xpreproc=-DINPUT_FILE=$(REF_INPUT_FILE) $(PREPROC_ARGS) ",
                    "UUT_PREPROC_ARGS": "--aie.Xpreproc=-DUUT_GRAPH=$(UUT_GRAPH) --aie.Xpreproc=-DOUTPUT_FILE=$(UUT_SIM_FILE) --aie.Xpreproc=-DFRONT_INPUT_FILE=$(FRONT_INPUT_FILE) --aie.Xpreproc=-DBACK_INPUT_FILE=$(BACK_INPUT_FILE) --aie.Xpreproc=-DFRONT_OUTPUT_FILE=$(FRONT_OUTPUT_FILE) --aie.Xpreproc=-DBACK_OUTPUT_FILE=$(BACK_OUTPUT_FILE) $(PREPROC_ARGS) --aie.Xpreproc=-DUSING_UUT=1"
                }
            }
        }
    },
    "generators": {
        "uut_config.h": {
            "file": "LIB_DIR/L2/tests/aie/common/scripts/tb_gen.py",
            "function": "generate_testbench"
        }
    },
    "parameter_file": "multi_params.json",
    "testinfo": {
        "disable": false,
        "jobs": [
            {
                "index": 0,
                "dependency": [],
                "env": "",
                "cmd": "",
                "max_memory_MB": {
                    "vitis_aie_x86sim": 8192,
                    "vitis_aie_sim": 32768,
                    "vitis_hw_build": 40960,
                    "vitis_hw_emu": 65536,
                    "vitis_hw_run": 40960
                },
                "max_time_min": {
                    "vitis_aie_sim": 200,
                    "vitis_aie_x86sim": 60,
                    "vitis_hw_build": 470,
                    "vitis_hw_emu": 600,
                    "vitis_hw_run": 60
                }
            }
        ],
        "targets": [
            "vitis_hw_emu",
            "vitis_hw_build",
            "vitis_hw_run"
        ],
        "category": "canary",
        "param_set": {
            "pull_req": {
                "*_hw_checkin": [
                    "vitis_hw_emu",
                    "vitis_hw_build"
                ]
            },
            "daily": {
                "*_hw_checkin": [
                    "vitis_hw_emu"
                ]
            }
        }
    }
}
