{
    "name": "Xilinx DSPLIB vectorized sample delay",
    "description": "",
    "gui": false,
    "flow": "aie",
    "platform_allowlist": [
        "vck190",
        "vek280"
    ],
    "part_allowlist": [
        "xcvr1602-vsva2488-2LP-e-S-es1",
        "xc2ve3858-ssva2112-2LP-e-S"
    ],
    "part_alias": {
        "xc2ve3858-ssva2112-2LP-e-S": "aie_mlv2"
    },
    "platform_properties": {
        "vck190": {
            "param_set": [
                "*_aie1_*"
            ],
            "v++": {
                "compiler": {
                    "clflags": []
                },
                "linker": {
                    "ldclflags": []
                },
                "package": {
                    "clflags": [
                        "--config PROJECT/system.cfg"
                    ]
                }
            }
        },
        "vek280": {
            "param_set": [
                "*_aie2_*"
            ],
            "v++": {
                "compiler": {
                    "clflags": []
                },
                "linker": {
                    "ldclflags": [
                        "--config PROJECT/system.cfg"
                    ]
                }
            },
            "aiecompiler": {
                "compiler": {
                    "customized_params": {
                        "default": {
                            "FIFO_THRESHOLD": " "
                        }
                    }
                }
            }
        }
    },
    "part_properties": {
        "xcvr1602-vsva2488-2LP-e-S-es1": {
            "param_set": [
                "*canary_aie"
            ],
            "v++": {
                "compiler": {
                    "clflags": []
                },
                "linker": {
                    "ldclflags": [
                        "--config PROJECT/system.cfg"
                    ]
                }
            },
            "aiecompiler": {
                "compiler": {
                    "customized_params": {
                        "default": {
                            "COMPILER_ARGS": "",
                            "AIE_VARIANT": "1",
                            "FIFO_THRESHOLD": " "
                        }
                    }
                }
            }
        },
        "xc2ve3858-ssva2112-2LP-e-S": {
            "param_set": [
                "*_aie22_*"
            ],
            "v++": {
                "compiler": {
                    "clflags": []
                },
                "linker": {
                    "ldclflags": [
                        "--config PROJECT/system.cfg"
                    ]
                }
            },
            "aiecompiler": {
                "compiler": {
                    "customized_params": {
                        "default": {
                            "COMPILER_ARGS": "",
                            "AIE_VARIANT": "22",
                            "FIFO_THRESHOLD": "--aie.swfifo-threshold=120 "
                        }
                    }
                }
            }
        }
    },
    "pre_build": [
        {
            "build_cmd": " mkdir -p logs"
        },
        {
            "build_cmd": "$(if $(filter-out REF,$(TAG)), $(VITIS_PYTHON3) LIB_DIR/L2/tests/aie/common/scripts/paramenv.py --parameter_file $(PARAMS_FILE) --instance_name $(PARAMS) --command \"make -f helper.mk get_status HELPER_CUR_DIR=PROJECT HELPER_ROOT_DIR=LIB_DIR UUT_KERNEL=$(UUT_KERNEL)\")"
        },
        {
            "build_cmd": "$(if $(filter-out REF,$(TAG)), $(VITIS_PYTHON3) LIB_DIR/L2/tests/aie/common/scripts/paramenv.py --parameter_file $(PARAMS_FILE) --instance_name $(PARAMS) --command \"make -f PROJECT/helper.mk create_config HELPER_CUR_DIR=PROJECT HELPER_ROOT_DIR=LIB_DIR UUT_KERNEL=$(UUT_KERNEL)\")"
        },
        {
            "build_cmd": "$(if $(filter-out REF,$(TAG)), $(VITIS_PYTHON3) LIB_DIR/L2/meta/scripts/metadata_checker.py --ip $(UUT_KERNEL))"
        },
        {
            "build_cmd": "$(if $(filter-out REF,$(TAG)), # vitis --classic -exec ipmetadata_config_checker LIB_DIR/L2/meta/$(UUT_KERNEL).json ./config.json -newflow)"
        },
        {
            "build_cmd": "$(if $(filter-out REF,$(TAG)), $(VITIS_PYTHON3) LIB_DIR/L2/tests/aie/common/scripts/paramenv.py --parameter_file $(PARAMS_FILE) --instance_name $(PARAMS) --command \"make -f PROJECT/helper.mk gen_input HELPER_CUR_DIR=PROJECT HELPER_ROOT_DIR=LIB_DIR INPUT_FILE=$(LOC_INPUT_FILE)\")"
        },
        {
            "build_cmd": "$(if $(filter-out REF,$(TAG)), make run TARGET=x86sim TAG=REF)"
        },
        {
            "build_cmd": "$(if $(filter-out REF,$(TAG)), make cleanall)"
        }
    ],
    "post_launch": [
        {
            "target": "aiesim",
            "launch_cmd": [
                "$(VITIS_PYTHON3) LIB_DIR/L2/tests/aie/common/scripts/paramenv.py --parameter_file $(PARAMS_FILE) --instance_name $(PARAMS) --command \"make -f PROJECT/helper.mk ssr_zip HELPER_CUR_DIR=PROJECT HELPER_ROOT_DIR=LIB_DIR SPLIT_ZIP_FILE=$(LOC_OUTPUT_FILE_HW) TAG=$(TAG)\"",
                "grep -ve '[XT]' ./aiesimulator_output/data/uut_output.txt > ./data/uut_output.txt",
                "$(VITIS_PYTHON3) LIB_DIR/L2/tests/aie/common/scripts/paramenv.py --parameter_file $(PARAMS_FILE) --instance_name $(PARAMS) --command \"make -f LIB_DIR/L2/tests/aie/common/scripts/fir_helper.mk diff HELPER_CUR_DIR=PROJECT HELPER_ROOT_DIR=LIB_DIR\"",
                "$(VITIS_PYTHON3) LIB_DIR/L2/tests/aie/common/scripts/paramenv.py --parameter_file $(PARAMS_FILE) --instance_name $(PARAMS) --command \"make -f PROJECT/helper.mk get_status HELPER_CUR_DIR=PROJECT HELPER_ROOT_DIR=LIB_DIR UUT_KERNEL=$(UUT_KERNEL)\"",
                "$(VITIS_PYTHON3) LIB_DIR/L2/tests/aie/common/scripts/paramenv.py --parameter_file $(PARAMS_FILE) --instance_name $(PARAMS) --command \"make -f PROJECT/helper.mk get_latency HELPER_CUR_DIR=PROJECT HELPER_ROOT_DIR=LIB_DIR UUT_KERNEL=$(UUT_KERNEL)\"",
                "$(VITIS_PYTHON3) LIB_DIR/L2/tests/aie/common/scripts/paramenv.py --parameter_file $(PARAMS_FILE) --instance_name $(PARAMS) --command \"make -f PROJECT/helper.mk get_stats HELPER_CUR_DIR=PROJECT HELPER_ROOT_DIR=LIB_DIR UUT_KERNEL=$(UUT_KERNEL)\"",
                "$(VITIS_PYTHON3) LIB_DIR/L2/tests/aie/common/scripts/paramenv.py --parameter_file $(PARAMS_FILE) --instance_name $(PARAMS) --command \"make -f PROJECT/helper.mk harvest_mem HELPER_CUR_DIR=PROJECT HELPER_ROOT_DIR=LIB_DIR UUT_KERNEL=$(UUT_KERNEL)\"",
                "tclsh LIB_DIR/L2/tests/aie/common/scripts/diff_exit.tcl ./"
            ]
        },
        {
            "target": "x86sim",
            "launch_cmd": [
                "$(if $(filter-out REF,$(TAG)), $(VITIS_PYTHON3) LIB_DIR/L2/tests/aie/common/scripts/paramenv.py --parameter_file $(PARAMS_FILE) --instance_name $(PARAMS) --command \"make -f PROJECT/helper.mk ssr_zip HELPER_CUR_DIR=PROJECT HELPER_ROOT_DIR=LIB_DIR SPLIT_ZIP_FILE=$(LOC_OUTPUT_FILE_X86) TAG=$(TAG)\")",
                "$(if $(filter REF,$(TAG)),     $(VITIS_PYTHON3) LIB_DIR/L2/tests/aie/common/scripts/paramenv.py --parameter_file $(PARAMS_FILE) --instance_name $(PARAMS) --command \"make -f PROJECT/helper.mk ssr_zip HELPER_CUR_DIR=PROJECT HELPER_ROOT_DIR=LIB_DIR SPLIT_ZIP_FILE=$(REF_LOC_OUTPUT_FILE_X86) TAG=$(TAG)\")",
                "$(if $(filter-out REF,$(TAG)), grep -ve '[XT]' ./x86simulator_output/data/uut_output.txt > ./data/uut_output.txt)",
                "$(if $(filter REF,$(TAG)),     grep -ve '[XT]' ./x86simulator_output/data/ref_output.txt > ./data/ref_output.txt)",
                "$(if $(filter-out REF,$(TAG)), $(VITIS_PYTHON3) LIB_DIR/L2/tests/aie/common/scripts/paramenv.py --parameter_file $(PARAMS_FILE) --instance_name $(PARAMS) --command \"make -f LIB_DIR/L2/tests/aie/common/scripts/fir_helper.mk diff HELPER_CUR_DIR=PROJECT HELPER_ROOT_DIR=LIB_DIR\")",
                "$(if $(filter-out REF,$(TAG)), $(VITIS_PYTHON3) LIB_DIR/L2/tests/aie/common/scripts/paramenv.py --parameter_file $(PARAMS_FILE) --instance_name $(PARAMS) --command \"make -f PROJECT/helper.mk get_status HELPER_CUR_DIR=PROJECT HELPER_ROOT_DIR=LIB_DIR UUT_KERNEL=$(UUT_KERNEL)\")",
                "$(if $(filter-out REF,$(TAG)), tclsh LIB_DIR/L2/tests/aie/common/scripts/diff_exit.tcl ./)"
            ]
        }
    ],
    "launch": [
        {
            "name": "aiesim-launch",
            "target": "aiesim",
            "sim_options": "--graph-latency"
        },
        {
            "name": "x86sim-launch",
            "target": "x86sim",
            "sim_options": "$(if $(filter-out REF,$(TAG)), --valgrind)"
        }
    ],
    "aiecompiler": {
        "compiler": {
            "includepaths": [
                "LIB_DIR/L1/include/aie",
                "LIB_DIR/L1/src/aie",
                "LIB_DIR/L1/tests/aie/inc",
                "LIB_DIR/L1/tests/aie/src",
                "LIB_DIR/L2/include/aie",
                "LIB_DIR/L2/tests/aie/common/inc",
                "./"
            ],
            "customized_params": {
                "params": "--aie.verbose $($(TAG)_TARGET_COMPILE_ARGS) $($(TAG)_PREPROC_ARGS)",
                "default": {
                    "TAG": "UUT",
                    "AIE_VARIANT": "1",
                    "UUT_KERNEL": "sample_delay",
                    "REF_KERNEL": "sample_delay_ref",
                    "UUT_GRAPH": "sample_delay_graph",
                    "REF_GRAPH": "sample_delay_ref_graph",
                    "DIFF_TOLERANCE": "0",
                    "CC_TOLERANCE": "0",
                    "LOC_OUTPUT_FILE_X86": "./x86simulator_output/data/uut_output.txt",
                    "REF_LOC_OUTPUT_FILE_X86": "./x86simulator_output/data/ref_output.txt",
                    "LOC_OUTPUT_FILE_HW": "./aiesimulator_output/data/uut_output.txt",
                    "LOC_INPUT_FILE": "./data/input.txt",
                    "REF_INPUT_FILE": "./data/input_ref.txt",
                    "UUT_SIM_FILE": "./data/uut_output.txt",
                    "REF_SIM_FILE": "./data/ref_output.txt",
                    "UUT_TARGET_COMPILE_ARGS": " $(FIFO_THRESHOLD) --aie.Xchess=llvm.xargs=\"-std=c++2a\" --aie.Xchess=main:backend.mist2.xargs=\"+NOdra\"  --aie.Xchess=main:backend.mist2.pnll=\"off\" ",
                    "REF_TARGET_COMPILE_ARGS": "",
                    "PREPROC_ARGS": "",
                    "REF_PREPROC_ARGS": "--aie.Xpreproc=-DUUT_GRAPH=$(REF_GRAPH) --aie.Xpreproc=-DINPUT_FILE=$(LOC_INPUT_FILE) --aie.Xpreproc=-DOUTPUT_FILE=$(REF_SIM_FILE) $(PREPROC_ARGS)",
                    "UUT_PREPROC_ARGS": "--aie.Xpreproc=-DUUT_GRAPH=$(UUT_GRAPH) --aie.Xpreproc=-DINPUT_FILE=$(LOC_INPUT_FILE) --aie.Xpreproc=-DOUTPUT_FILE=$(UUT_SIM_FILE) $(PREPROC_ARGS) --aie.Xpreproc=-DUSING_UUT=1"
                }
            }
        }
    },
    "aiecontainers": [
        {
            "accelerators": [
                {
                    "location": "PROJECT/test.cpp",
                    "files": [
                        "LIB_DIR/L1/src/aie/sample_delay.cpp",
                        "uut_config.h"
                    ],
                    "pl-freq": 625,
                    "workdir": "./Work",
                    "options": "",
                    "name": "libadf.a"
                }
            ]
        }
    ],
    "generators": {
        "uut_config.h": {
            "file": "LIB_DIR/L2/tests/aie/common/scripts/tb_gen.py",
            "function": "generate_testbench"
        }
    },
    "config_make": "LIB_DIR/L2/tests/aie/common/scripts/params.mk",
    "associated_files": [
        "LIB_DIR/L2/tests/aie/common/scripts",
        "LIB_DIR/L2/meta/*common*",
        "LIB_DIR/L2/meta/sample_delay*"
    ],
    "parameter_file": "multi_params.json",
    "testinfo": {
        "disable": false,
        "jobs": [
            {
                "index": 0,
                "dependency": [],
                "env": "",
                "cmd": "",
                "max_memory_MB": {
                    "vitis_aie_x86sim": 8192,
                    "vitis_aie_sim": 40960
                },
                "max_time_min": {
                    "vitis_aie_x86sim": 470,
                    "vitis_aie_sim": 470
                }
            }
        ],
        "targets": [
            "vitis_aie_sim",
            "vitis_aie_x86sim"
        ],
        "category": "canary",
        "param_set": {
            "pull_req": {
                "*_canary_aie": [
                    "vitis_aie_sim",
                    "vitis_aie_x86sim"
                ],
                "*_hw_checkin": [
                    "vitis_aie_sim",
                    "vitis_aie_x86sim"
                ],
                "*_x86sim_checkin": [
                    "vitis_aie_x86sim"
                ]
            },
            "daily": {
                "*_canary_aie": [
                    "vitis_aie_sim",
                    "vitis_aie_x86sim"
                ],
                "*_hw_qor": [
                    "vitis_aie_sim",
                    "vitis_aie_x86sim"
                ],
                "*_x86sim_qor": [
                    "vitis_aie_x86sim"
                ]
            }
        }
    }
}