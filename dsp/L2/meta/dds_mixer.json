{
    "schema": "vitis_library_api_spec_schema-1.0",
    "api_name": "xf::dsp::aie::mixer::dds_mixer::dds_mixer_graph",
    "display_name": "dds_mixer_graph",
    "header_file_name": "dds_mixer_graph.hpp",
    "search_paths": [
        "L1/include/aie",
        "L1/src/aie",
        "L1/tests/aie/inc",
        "L1/tests/aie/src",
        "L2/include/aie",
        "L2/tests/aie/common/inc"
    ],
    "parameters": [
        {
            "name": "AIE_VARIANT",
            "type": "uint",
            "description": "specifies the device type",
            "updater": {
                "file": "dds_mixer.py",
                "function": "update_AIE_VARIANT"
            },
            "validator": {
                "file": "dds_mixer.py",
                "function": "validate_AIE_VARIANT"
            }
        },
        {
            "name": "TT_DATA",
            "type": "typename",
            "description": "describes the type of individual data samples input to and output from the dds/mixer",
            "enum": [
                "cint16",
                "cint32",
                "cfloat"
            ],
            "updater": {
                "file": "dds_mixer.py",
                "function": "update_TT_DATA",
                "args": [
                ]
            },
            "validator": {
                "file": "dds_mixer.py",
                "function": "validate_TT_DATA",
                "args": [
                ]
            }
        },
        {
            "name": "TP_MIXER_MODE",
            "type": "uint",
            "description": "describes the mode of operation of the dds/mixer",
            "updater": {
                "file": "dds_mixer.py",
                "function": "update_TP_MIXER_MODE",
                "args": [
                    "TT_DATA"
                ]
            },
            "validator": {
                "file": "dds_mixer.py",
                "function": "validate_TP_MIXER_MODE",
                "args": [
                    "TT_DATA"
                 ]
            }
        },
        {
            "name": "TP_SSR",
            "type": "uint",
            "description": "specifies the super sample rate, ie how much data input/output in parallel for a single channel.",
            "updater": {
                "file": "dds_mixer.py",
                "function": "update_TP_SSR",
                "args": []
            },
            "validator": {
                "file": "dds_mixer.py",
                "function": "validate_TP_SSR",
                "args": []
            }
        },
        {
            "name": "TP_API",
            "type": "uint",
            "description": "specifies if the input/output interface should be window-based or stream-based.",
            "updater": {
                "file": "dds_mixer.py",
                "function": "update_TP_API",
                "args": [
                ]},
            "validator": {
                "file": "dds_mixer.py",
                "function": "validate_TP_API",
                "args": [
                ]}
        },
        {
            "name": "TP_INPUT_WINDOW_VSIZE",
            "type": "uint",
            "description": "describes the number of samples in the input/output window API or number of samples to process per iteration.",
            "updater": {
                "file": "dds_mixer.py",
                "function": "update_TP_INPUT_WINDOW_VSIZE",
                "args": [
                    "TT_DATA",
                    "TP_SSR",
                    "TP_API"
                ]
            },
            "validator": {
                "file": "dds_mixer.py",
                "function": "validate_TP_INPUT_WINDOW_VSIZE",
                "args": [
                    "TT_DATA",
                    "TP_SSR",
                    "TP_API"
                ]
            }
        },
        {
            "name": "TP_USE_PHASE_RELOAD",
            "type": "uint",
            "description": "specifies if phase_offset can be reloaded at runtime.",
            "minimum": 0,
            "maximum": 1,
            "updater": {
                "file": "dds_mixer.py",
                "function": "update_TP_USE_PHASE_RELOAD",
                "args": [
                    "TP_SSR"
                ]},
            "validator": {
                "file": "dds_mixer.py",
                "function": "validate_TP_USE_PHASE_RELOAD",
                "args": [
                    "TP_SSR"
                ]}
        },
        {
            "name": "TP_PHASE_RELOAD_API",
            "type": "uint",
            "description": "specifies whether phase_offset reload, if used, is to be non-blocking (RTP) or blocking (iobuffer).",
            "minimum": 0,
            "maximum": 1,
            "updater": {
                "file": "dds_mixer.py",
                "function": "update_TP_PHASE_RELOAD_API",
                "args" : ["TP_USE_PHASE_RELOAD"]
            },
            "validator": {
                "file": "dds_mixer.py",
                "function": "validate_TP_PHASE_RELOAD_API",
                "args" : ["TP_USE_PHASE_RELOAD"]
            }
        },
        {
            "name": "TP_USE_PHASE_INC_RELOAD",
            "type": "uint",
            "description": "specifies if phase_increment can be reloaded at runtime.",
            "minimum": 0,
            "maximum": 1,
            "updater": {
                "file": "dds_mixer.py",
                "function": "update_TP_USE_PHASE_INC_RELOAD",
                "args": [
                    "TP_SSR"
                ]},
            "validator": {
                "file": "dds_mixer.py",
                "function": "validate_TP_USE_PHASE_INC_RELOAD",
                "args": [
                    "TP_SSR"
                ]}
        },
        {
            "name": "phaseInc",
            "type": "uint",
            "description": "specifies the phase increment between samples.",
            "updater": {
                "file": "dds_mixer.py",
                "function": "update_phaseInc",
                "args": [
                ]},
            "validator": {
                "file": "dds_mixer.py",
                "function": "validate_phaseInc",
                "args": [
                ]}
        },
        {
            "name": "initialPhaseOffset",
            "type": "uint",
            "description": "specifies the initial value of the phase accumulator, creating a phase offset.",
            "updater": {
                "file": "dds_mixer.py",
                "function": "update_initialPhaseOffset",
                "args": [
                ]},
            "validator": {
                "file": "dds_mixer.py",
                "function": "validate_initialPhaseOffset",
                "args": [
                ]}
        },
        {
            "name": "TP_RND",
            "description": "The rounding to be applied during the shift down stage of processing.",
            "type": "uint",
            "updater": {
                "file": "dds_mixer.py",
                "function": "update_TP_RND",
                "args": [
                    "AIE_VARIANT"
                ]},
            "validator": {
                "file": "dds_mixer.py",
                "function": "validate_TP_RND",
                "args": [
                    "AIE_VARIANT"
                ]}            
        },
        {
            "name": "TP_SAT",
            "description": "Saturation mode.",
            "type": "uint",
            "updater": {
                "file": "dds_mixer.py",
                "function": "update_TP_SAT",
                "args": [
                    "TP_MIXER_MODE"
                ]},
            "validator": {
                "file": "dds_mixer.py",
                "function": "validate_TP_SAT",
                "args": [
                    "TP_MIXER_MODE"
                ]}
        }
    ],
    "ports": {
        "file": "dds_mixer.py",
        "function": "info_ports"
    },
    "generator": {
        "file": "dds_mixer.py",
        "function": "generate_graph"
    }
}
