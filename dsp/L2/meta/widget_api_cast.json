{
    "schema": "vitis_library_api_spec_schema-1.0",
    "api_name": "xf::dsp::aie::widget::api_cast::widget_api_cast_graph",
    "display_name": "widget_api_cast_graph",
    "header_file_name": "widget_api_cast_graph.hpp",
    "search_paths": [
        "L1/include/aie",
        "L1/src/aie",
        "L1/tests/aie/inc",
        "L1/tests/aie/src",
        "L2/include/aie",
        "L2/tests/aie/common/inc"
    ],
    "parameters": [
        {
            "name": "AIE_VARIANT",
            "type": "uint",
            "description": "Specifies the device type.",
            "updater": {
                "file": "widget_api_cast.py",
                "function": "update_AIE_VARIANT"
            },
            "validator": {
                "file": "widget_api_cast.py",
                "function": "validate_AIE_VARIANT"
            }
        },
        {
            "name": "TT_DATA",
            "type": "typename",
            "description": "describes the type of individual data samples input to and output from the dds/mixer",
            "enum": [
                "int16",
                "int32",
                "float",
                "cint16",
                "cint32",
                "cfloat"
            ],
            "updater": {
                "file": "widget_api_cast.py",
                "function": "update_TT_DATA"
            },
            "validator": {
                "file": "widget_api_cast.py",
                "function": "validate_TT_DATA"
            }
        },
        {
            "name": "TP_IN_API",
            "type": "uint",
            "description": "specifies if the input interface should be iobuffer or stream-based.",
            "minimum": 0,
            "maximum": 1,
            "updater": {
                "file": "widget_api_cast.py",
                "function": "update_TP_IN_API",
                "args": []
            },
            "validator": {
                "file": "widget_api_cast.py",
                "function": "validate_TP_IN_API",
                "args": []
            }
        },
        {
            "name": "TP_OUT_API",
            "type": "uint",
            "description": "specifies if the output interface should be iobuffer or stream-based.",
            "minimum": 0,
            "maximum": 1,
            "updater": {
                "file": "widget_api_cast.py",
                "function": "update_TP_OUT_API",
                "args": []
            },
            "validator": {
                "file": "widget_api_cast.py",
                "function": "validate_TP_OUT_API",
                "args": []
            }
        },
        {
            "name": "TP_NUM_INPUTS",
            "type": "uint",
            "description": "specifies the number of input channels",
            "minimum": 0,
            "maximum": 2,
            "updater": {
                "file": "widget_api_cast.py",
                "function": "update_TP_NUM_INPUTS",
                "args": [
                    "AIE_VARIANT", "TT_DATA", "TP_IN_API", "TP_OUT_API"
                ]
            },
            "validator": {
                "file": "widget_api_cast.py",
                "function": "validate_TP_NUM_INPUTS",
                "args": [
                    "AIE_VARIANT", "TT_DATA", "TP_IN_API", "TP_OUT_API"
                ]
            }
        },
        {
            "name": "TP_WINDOW_VSIZE",
            "type": "uint",
            "description": "describes the number of samples in the input/output window API or number of samples to process per iteration.",
            "minimum": 4,
            "maximum": 4096,
            "updater": {
                "file": "widget_api_cast.py",
                "function": "update_TP_WINDOW_VSIZE"
            },
            "validator": {
                "file": "widget_api_cast.py",
                "function": "validate_TP_WINDOW_VSIZE"
            }
        },
        {
            "name": "TP_NUM_OUTPUT_CLONES",
            "type": "uint",
            "description": "specifies the number of copies of the output channel.",
            "minimum": 0,
            "maximum": 4,
            "updater": {
                "file": "widget_api_cast.py",
                "function": "update_TP_NUM_OUTPUT_CLONES",
                "args": ["AIE_VARIANT", "TP_IN_API", "TP_OUT_API"]
            },
            "validator": {
                "file": "widget_api_cast.py",
                "function": "validate_TP_NUM_OUTPUT_CLONES",
                "args": ["AIE_VARIANT", "TP_IN_API", "TP_OUT_API"]
            }
        },
        {
            "name": "TP_PATTERN",
            "type": "uint",
            "description": "specifies how input channels are to be interlaced prior to output.",
            "minimum": 0,
            "maximum": 2,
            "updater": {
                "file": "widget_api_cast.py",
                "function": "update_TP_PATTERN",
                "args":["TP_IN_API", "TP_OUT_API", "TP_NUM_INPUTS", "TP_NUM_OUTPUT_CLONES"]
            },
            "validator": {
                "file": "widget_api_cast.py",
                "function": "validate_TP_PATTERN",
                "args":["TP_IN_API", "TP_OUT_API", "TP_NUM_INPUTS", "TP_NUM_OUTPUT_CLONES"]
            }
        },
        {
            "name": "TP_HEADER_BYTES",
            "type": "uint",
            "description": "specifies the number of bytes considered to be header (not interlaced) rather than data.",
            "minimum": 0,
            "maximum": 32,
            "updater": {
                "file": "widget_api_cast.py",
                "function": "update_TP_HEADER_BYTES"
            },
            "validator": {
                "file": "widget_api_cast.py",
                "function": "validate_TP_HEADER_BYTES"
            }
        }
    ],
    "ports": {
        "file": "widget_api_cast.py",
        "function": "info_ports"
    },
    "generator": {
        "file": "widget_api_cast.py",
        "function": "generate_graph"
    }
}