
class euclidean_distance : public adf::graph {
public:
  // ports
  //template <typename dir>
  template <typename dir>
  std::array<adf::port<input>, 1> inP;
  std::array<adf::port<input>, 1> inQ;
  std::array<adf::port<output>, 1> out;

  xf::dsp::aie::euclidean_distance::euclidean_distance_graph<
    float, // TT_DATA_P
    float, // TT_DATA_Q
    float, // TT_DATA_OUT
    32, // TP_LEN_P
    32, //TP_LEN_Q
    3, // TP_DIM_P
    3, //TP_DIM_Q
    0, //TP_API
    0, //TP_RND
    0, // TP_SAT
    1, // TP_NUM_FRAMES
    0, //TP_IS_OUTPUT_SQUARED
    > euclidean_distance_graph;

  euclidean_distance() : euclidean_distance_graph() {
    adf::kernel *euclidean_distance_kernels = euclidean_distance_graph.getKernels();
    for (int i=0; i < 1; i++) {
      adf::runtime<ratio>(euclidean_distance_kernels[i]) = 0.9;
    }
    adf::connect<> net_in(inP, euclidean_distance_graph.inP[0]);
    adf::connect<> net_in(inQ, euclidean_distance_graph.inQ[1]);
    adf::connect<> net_out(euclidean_distance_graph.out, out[0]);
   
  }
};
